//@version=5
indicator("40 Filtre Tablo Sistemi", shorttitle="40Filter", overlay=true)

// Tablo Ayarları
show_signals = input.bool(true, 'Sinyalleri Göster', group = 'Görünüm')
show_table = input.bool(true, "Tabloyu Göster", group="Ayarlar")
table_position = input.string("middle_right", "Tablo Konumu", options=["top_left", "top_center", "top_right", "middle_left", "middle_center", "middle_right", "bottom_left", "bottom_center", "bottom_right"], group="Ayarlar")
table_size = input.string("small", "Tablo Boyutu", options=["tiny", "small", "normal", "large"], group="Ayarlar")

// Tablo pozisyonu
get_table_position() =>
    switch table_position
        "top_left" => position.top_left
        "top_center" => position.top_center
        "top_right" => position.top_right
        "middle_left" => position.middle_left
        "middle_center" => position.middle_center
        "middle_right" => position.middle_right
        "bottom_left" => position.bottom_left
        "bottom_center" => position.bottom_center
        "bottom_right" => position.bottom_right
        => position.middle_right

// Tablo boyutu
get_table_size() =>
    switch table_size
        "tiny" => size.tiny
        "small" => size.small
        "normal" => size.normal
        "large" => size.large
        => size.small

// Filtre hesaplamaları
// 1. RSI (14)
rsi_14 = ta.rsi(close, 14)
filter_1 = rsi_14 > 70 ? 2 : rsi_14 > 50 ? 1 : rsi_14 < 30 ? -1 : 0

// 2. MACD
[macd_line, signal_line, _] = ta.macd(close, 12, 26, 9)
filter_2 = macd_line > signal_line ? 1 : -1

// 3. MA 20
ma_20 = ta.sma(close, 20)
filter_3 = close > ma_20 ? 1 : -1

// 4. MA 50
ma_50 = ta.sma(close, 50)
filter_4 = close > ma_50 ? 1 : -1

// 5. Bollinger Bands
[_, bb_upper, bb_lower] = ta.bb(close, 20, 2)
filter_5 = close > bb_upper ? 2 : close > bb_lower ? 1 : -1

// 6. Stochastic
k_percent = ta.stoch(close, high, low, 14)
filter_6 = k_percent > 80 ? 2 : k_percent > 50 ? 1 : k_percent < 20 ? -1 : 0

// 7. Williams %R
williams_r = ta.wpr(14)
filter_7 = williams_r > -20 ? 2 : williams_r > -50 ? 1 : williams_r < -80 ? -1 : 0

// 8. CCI
cci_20 = ta.cci(close, 20)
filter_8 = cci_20 > 100 ? 2 : cci_20 > 0 ? 1 : cci_20 < -100 ? -1 : 0

// 9. ADX
length = 14
up = ta.change(high)
down = -ta.change(low)

plusDM = na(up) ? na : (up > down and up > 0 ? up : 0)
minusDM = na(down) ? na : (down > up and down > 0 ? down : 0)

trur = ta.rma(ta.tr(true), length)
plusDI = 100 * ta.rma(plusDM, length) / trur
minusDI = 100 * ta.rma(minusDM, length) / trur

dx = 100 * math.abs(plusDI - minusDI) / (plusDI + minusDI)
adx = ta.rma(dx, length)

// ADX durumunu belirle
filter_9 = adx > 40 ? 2 : adx > 25 ? 1 : -1

// 10. Volume
avg_volume = ta.sma(volume, 20)
filter_10 = volume > avg_volume * 1.5 ? 2 : volume > avg_volume ? 1 : -1

// 11. Parabolic SAR
sar_value = ta.sar(0.02, 0.02, 0.2)
filter_11 = close > sar_value ? 1 : -1

// 12. Ichimoku
tenkan_sen = (ta.highest(high, 9) + ta.lowest(low, 9)) / 2
kijun_sen = (ta.highest(high, 26) + ta.lowest(low, 26)) / 2
senkou_span_a = (tenkan_sen + kijun_sen) / 2
senkou_span_b = (ta.highest(high, 52) + ta.lowest(low, 52)) / 2
cloud_top = math.max(senkou_span_a[26], senkou_span_b[26])
cloud_bottom = math.min(senkou_span_a[26], senkou_span_b[26])
filter_12 = close > cloud_top ? 1 : close < cloud_bottom ? -1 : 0

// 13. Aroon Hesaplama
highestBar = ta.highestbars(high, length)
lowestBar  = ta.lowestbars(low, length)

aroon_up   = 100 * (length - highestBar) / length
aroon_down = 100 * (length - lowestBar) / length

// 14. Aroon Up Durumu
filter_13 = (aroon_up > 80 ? 1 : aroon_up > 50 ? 0 : aroon_up < 30 ? -1 : 0)

// 15. Aroon Down Durumu
filter_14 = (aroon_down > 80 ? -1 : aroon_down > 50 ? 0 : aroon_down < 30 ? 1 : 0)

// 15. Ultimate Oscillator
bp = close - math.min(low, close[1])
tr = math.max(high, close[1]) - math.min(low, close[1])
avg7 = ta.sma(bp, 7) / ta.sma(tr, 7)
avg14 = ta.sma(bp, 14) / ta.sma(tr, 14)
avg28 = ta.sma(bp, 28) / ta.sma(tr, 28)
uo = 100 * (4 * avg7 + 2 * avg14 + avg28) / 7
filter_15 = uo > 70 ? 2 : uo > 50 ? 1 : uo < 30 ? -1 : 0

// 16. Awesome Oscillator
ao = ta.sma(hl2, 5) - ta.sma(hl2, 34)
filter_16 = ao > 0 ? 1 : -1

// 17. Momentum
momentum_10 = (close / close[10]) * 100
filter_17 = momentum_10 > 102 ? 2 : momentum_10 > 100 ? 1 : momentum_10 < 98 ? -1 : 0

// 18. Rate of Change
roc = ta.roc(close, 10)
filter_18 = roc > 2 ? 2 : roc > 0 ? 1 : roc < -2 ? -1 : 0

// 19. TRIX
ema1 = ta.ema(close, 14)
ema2 = ta.ema(ema1, 14)
ema3 = ta.ema(ema2, 14)
trix = na(ema3[1]) ? 0 : (ema3 - ema3[1]) / ema3[1] * 10000
filter_19 = trix > 0 ? 1 : -1

// 20. Vortex Indicator
vm_pos = math.abs(high - low[1])
vm_neg = math.abs(low - high[1])
vi_pos = ta.sma(vm_pos, 14) / ta.sma(ta.tr, 14)
vi_neg = ta.sma(vm_neg, 14) / ta.sma(ta.tr, 14)
filter_20 = vi_pos > vi_neg ? 1 : -1

// 21. ATR
atr_14 = ta.atr(14)
avg_atr = ta.sma(atr_14, 20)
filter_21 = atr_14 > avg_atr * 1.2 ? 2 : atr_14 > avg_atr ? 1 : -1

// 22. Volatility
volatility = atr_14 / close * 100
filter_22 = volatility > 3 ? 2 : volatility > 1 ? 1 : volatility < 0.5 ? -1 : 0

// 23. Volume Oscillator
volume_osc = (ta.sma(volume, 5) - ta.sma(volume, 20)) / ta.sma(volume, 20) * 100
filter_23 = volume_osc > 10 ? 2 : volume_osc > 0 ? 1 : volume_osc < -10 ? -1 : 0

// 24. Chaikin Money Flow
mf_mult = ((close - low) - (high - close)) / (high - low)
mf_volume = mf_mult * volume
cmf = ta.sma(mf_volume, 20) / ta.sma(volume, 20)
filter_24 = cmf > 0.1 ? 2 : cmf > 0 ? 1 : cmf < -0.1 ? -1 : 0

// 25. Money Flow Index
typical_price = (high + low + close) / 3
raw_money_flow = typical_price * volume
positive_flow = typical_price > typical_price[1] ? raw_money_flow : 0
negative_flow = typical_price < typical_price[1] ? raw_money_flow : 0
pos_mf = ta.sma(positive_flow, 14)
neg_mf = ta.sma(negative_flow, 14)
money_ratio = pos_mf / neg_mf
mfi = 100 - (100 / (1 + money_ratio))
filter_25 = mfi > 80 ? 2 : mfi > 50 ? 1 : mfi < 20 ? -1 : 0

// 26. Ease of Movement
high_low = high - low
distance_moved = hl2 - hl2[1]
box_height = volume / (high - low)
emv = high_low != 0 ? distance_moved / box_height : 0
filter_26 = ta.sma(emv, 14) > 0 ? 1 : -1

// 27. Volume Rate of Change
vol_roc = ta.roc(volume, 10)
filter_27 = vol_roc > 20 ? 2 : vol_roc > 0 ? 1 : vol_roc < -20 ? -1 : 0

// 28. A/D Line
ad_line = ta.cum(mf_mult * volume)
filter_28 = ad_line > ad_line[5] ? 1 : -1

// 29. On Balance Volume
obv = ta.obv
filter_29 = obv > obv[5] ? 1 : -1

// 30. Force Index
fi = volume * (close - close[1])
filter_30 = ta.sma(fi, 13) > 0 ? 1 : -1

// 31. Pivot Points
pp = (high[1] + low[1] + close[1]) / 3
r1 = 2 * pp - low[1]
s1 = 2 * pp - high[1]
filter_31 = close > r1 ? 2 : close > pp ? 1 : close < s1 ? -1 : 0

// 32. Support/Resistance
highest_20 = ta.highest(high, 20)
lowest_20 = ta.lowest(low, 20)
filter_32 = close > highest_20 * 0.99 ? 2 : close > highest_20 * 0.97 ? 1 : close < lowest_20 * 1.01 ? -1 : 0

// 33. Fibonacci
fib_high = ta.highest(high, 50)
fib_low = ta.lowest(low, 50)
fib_618 = fib_high - (fib_high - fib_low) * 0.618
fib_382 = fib_high - (fib_high - fib_low) * 0.382
filter_33 = close > fib_382 ? 1 : close < fib_618 ? -1 : 0

// 34. Bullish/Bearish Engulfing
bullish_engulfing = close > open and close[1] < open[1] and close > open[1] and open < close[1]
bearish_engulfing = close < open and close[1] > open[1] and close < open[1] and open > close[1]
filter_34 = bullish_engulfing ? 1 : bearish_engulfing ? -1 : 0

// 35. Gap Analysis
gap_up = open > close[1] * 1.005
gap_down = open < close[1] * 0.995
filter_35 = gap_up ? 1 : gap_down ? -1 : 0

// 36. High/Low Analysis
new_high = high >= ta.highest(high, 20)[1]
new_low = low <= ta.lowest(low, 20)[1]
filter_36 = new_high ? 2 : new_low ? -1 : 0

// 37. Breakout Detection
resistance = ta.highest(high, 20)[1]
support = ta.lowest(low, 20)[1]
breakout_up = close > resistance
breakout_down = close < support
filter_37 = breakout_up ? 2 : breakout_down ? -1 : 0

// 38. Trend Line
slope = (close - close[20]) / 20
filter_38 = slope > 0 and close > close[1] ? 1 : slope < 0 and close < close[1] ? -1 : 0

// 39. Channel Analysis
upper_channel = ta.highest(high, 20)
lower_channel = ta.lowest(low, 20)
channel_position = (close - lower_channel) / (upper_channel - lower_channel)
filter_39 = channel_position > 0.9 ? 2 : channel_position > 0.7 ? 1 : channel_position < 0.3 ? -1 : 0

// 40. MA Convergence
filter_40 = ma_20 > ma_50 and ma_20 > ma_20[1] ? 1 : ma_20 < ma_50 and ma_20 < ma_20[1] ? -1 : 0

// Renk belirleme fonksiyonu
get_color(status) =>
    switch status
        2 => color.blue      // Tavana giden (mavi)
        1 => color.green     // Olumlu (yeşil)
        0 => color.yellow    // Nötr (sarı)
        -1 => color.red      // Olumsuz (kırmızı)
        => color.gray

// Nokta karakteri
get_dot(status) =>
    switch status
        2 => "●"     // Mavi nokta
        1 => "●"     // Yeşil nokta
        0 => "●"     // Sarı nokta
        -1 => "●"    // Kırmızı nokta
        => "●"

// Tablo oluşturma
if show_table and barstate.islast
    var table filter_table = table.new(get_table_position(), 2, 41, bgcolor=color.new(color.white, 90), border_width=1, border_color=color.gray)
    
    // Başlık
    table.cell(filter_table, 0, 0, "FİLTRE", text_color=color.white, text_size=get_table_size(), bgcolor=color.new(color.black, 0))
    table.cell(filter_table, 1, 0, "DURUM", text_color=color.white, text_size=get_table_size(), bgcolor=color.new(color.black, 0))
    
    // Filtreler
    table.cell(filter_table, 0, 1, "RSI (14)", text_color=color.green, text_size=get_table_size())
    table.cell(filter_table, 1, 1, get_dot(filter_1), text_color=get_color(filter_1), text_size=get_table_size(), bgcolor=get_color(filter_1))
    
    table.cell(filter_table, 0, 2, "MACD", text_color=color.green, text_size=get_table_size())
    table.cell(filter_table, 1, 2, get_dot(filter_2), text_color=get_color(filter_2), text_size=get_table_size(), bgcolor=get_color(filter_2))
    
    table.cell(filter_table, 0, 3, "Moving Average (20)", text_color=color.green, text_size=get_table_size())
    table.cell(filter_table, 1, 3, get_dot(filter_3), text_color=get_color(filter_3), text_size=get_table_size(), bgcolor=get_color(filter_3))
    
    table.cell(filter_table, 0, 4, "Moving Average (50)", text_color=color.green, text_size=get_table_size())
    table.cell(filter_table, 1, 4, get_dot(filter_4), text_color=get_color(filter_4), text_size=get_table_size(), bgcolor=get_color(filter_4))
    
    table.cell(filter_table, 0, 5, "Bollinger Bands", text_color=color.green, text_size=get_table_size())
    table.cell(filter_table, 1, 5, get_dot(filter_5), text_color=get_color(filter_5), text_size=get_table_size(), bgcolor=get_color(filter_5))
    
    table.cell(filter_table, 0, 6, "Stochastic %K", text_color=color.green, text_size=get_table_size())
    table.cell(filter_table, 1, 6, get_dot(filter_6), text_color=get_color(filter_6), text_size=get_table_size(), bgcolor=get_color(filter_6))
    
    table.cell(filter_table, 0, 7, "Williams %R", text_color=color.green, text_size=get_table_size())
    table.cell(filter_table, 1, 7, get_dot(filter_7), text_color=get_color(filter_7), text_size=get_table_size(), bgcolor=get_color(filter_7))
    
    table.cell(filter_table, 0, 8, "CCI (20)", text_color=color.green, text_size=get_table_size())
    table.cell(filter_table, 1, 8, get_dot(filter_8), text_color=get_color(filter_8), text_size=get_table_size(), bgcolor=get_color(filter_8))
    
    table.cell(filter_table, 0, 9, "ADX (14)", text_color=color.green, text_size=get_table_size())
    table.cell(filter_table, 1, 9, get_dot(filter_9), text_color=get_color(filter_9), text_size=get_table_size(), bgcolor=get_color(filter_9))
    
    table.cell(filter_table, 0, 10, "Volume", text_color=color.green, text_size=get_table_size())
    table.cell(filter_table, 1, 10, get_dot(filter_10), text_color=get_color(filter_10), text_size=get_table_size(), bgcolor=get_color(filter_10))
    
    table.cell(filter_table, 0, 11, "Parabolic SAR", text_color=color.green, text_size=get_table_size())
    table.cell(filter_table, 1, 11, get_dot(filter_11), text_color=get_color(filter_11), text_size=get_table_size(), bgcolor=get_color(filter_11))
    
    table.cell(filter_table, 0, 12, "Ichimoku Cloud", text_color=color.green, text_size=get_table_size())
    table.cell(filter_table, 1, 12, get_dot(filter_12), text_color=get_color(filter_12), text_size=get_table_size(), bgcolor=get_color(filter_12))
    
    table.cell(filter_table, 0, 13, "Aroon Up", text_color=color.green, text_size=get_table_size())
    table.cell(filter_table, 1, 13, get_dot(filter_13), text_color=get_color(filter_13), text_size=get_table_size(), bgcolor=get_color(filter_13))
    
    table.cell(filter_table, 0, 14, "Aroon Down", text_color=color.green, text_size=get_table_size())
    table.cell(filter_table, 1, 14, get_dot(filter_14), text_color=get_color(filter_14), text_size=get_table_size(), bgcolor=get_color(filter_14))
    
    table.cell(filter_table, 0, 15, "Ultimate Oscillator", text_color=color.green, text_size=get_table_size())
    table.cell(filter_table, 1, 15, get_dot(filter_15), text_color=get_color(filter_15), text_size=get_table_size(), bgcolor=get_color(filter_15))
    
    table.cell(filter_table, 0, 16, "Awesome Oscillator", text_color=color.green, text_size=get_table_size())
    table.cell(filter_table, 1, 16, get_dot(filter_16), text_color=get_color(filter_16), text_size=get_table_size(), bgcolor=get_color(filter_16))
    
    table.cell(filter_table, 0, 17, "Momentum (10)", text_color=color.green, text_size=get_table_size())
    table.cell(filter_table, 1, 17, get_dot(filter_17), text_color=get_color(filter_17), text_size=get_table_size(), bgcolor=get_color(filter_17))
    
    table.cell(filter_table, 0, 18, "Rate of Change", text_color=color.green, text_size=get_table_size())
    table.cell(filter_table, 1, 18, get_dot(filter_18), text_color=get_color(filter_18), text_size=get_table_size(), bgcolor=get_color(filter_18))
    
    table.cell(filter_table, 0, 19, "TRIX", text_color=color.green, text_size=get_table_size())
    table.cell(filter_table, 1, 19, get_dot(filter_19), text_color=get_color(filter_19), text_size=get_table_size(), bgcolor=get_color(filter_19))
    
    table.cell(filter_table, 0, 20, "Vortex Indicator", text_color=color.green, text_size=get_table_size())
    table.cell(filter_table, 1, 20, get_dot(filter_20), text_color=get_color(filter_20), text_size=get_table_size(), bgcolor=get_color(filter_20))
    
    table.cell(filter_table, 0, 21, "ATR (14)", text_color=color.green, text_size=get_table_size())
    table.cell(filter_table, 1, 21, get_dot(filter_21), text_color=get_color(filter_21), text_size=get_table_size(), bgcolor=get_color(filter_21))
    
    table.cell(filter_table, 0, 22, "Volatilite", text_color=color.green, text_size=get_table_size())
    table.cell(filter_table, 1, 22, get_dot(filter_22), text_color=get_color(filter_22), text_size=get_table_size(), bgcolor=get_color(filter_22))
    
    table.cell(filter_table, 0, 23, "Volume Oscillator", text_color=color.green, text_size=get_table_size())
    table.cell(filter_table, 1, 23, get_dot(filter_23), text_color=get_color(filter_23), text_size=get_table_size(), bgcolor=get_color(filter_23))
    
    table.cell(filter_table, 0, 24, "Chaikin Money Flow", text_color=color.green, text_size=get_table_size())
    table.cell(filter_table, 1, 24, get_dot(filter_24), text_color=get_color(filter_24), text_size=get_table_size(), bgcolor=get_color(filter_24))
    
    table.cell(filter_table, 0, 25, "Money Flow Index", text_color=color.green, text_size=get_table_size())
    table.cell(filter_table, 1, 25, get_dot(filter_25), text_color=get_color(filter_25), text_size=get_table_size(), bgcolor=get_color(filter_25))
    
    table.cell(filter_table, 0, 26, "Ease of Movement", text_color=color.green, text_size=get_table_size())
    table.cell(filter_table, 1, 26, get_dot(filter_26), text_color=get_color(filter_26), text_size=get_table_size(), bgcolor=get_color(filter_26))
    
    table.cell(filter_table, 0, 27, "Volume Rate of Change", text_color=color.green, text_size=get_table_size())
    table.cell(filter_table, 1, 27, get_dot(filter_27), text_color=get_color(filter_27), text_size=get_table_size(), bgcolor=get_color(filter_27))
    
    table.cell(filter_table, 0, 28, "Accumulation/Distribution", text_color=color.green, text_size=get_table_size())
    table.cell(filter_table, 1, 28, get_dot(filter_28), text_color=get_color(filter_28), text_size=get_table_size(), bgcolor=get_color(filter_28))
    
    table.cell(filter_table, 0, 29, "On Balance Volume", text_color=color.green, text_size=get_table_size())
    table.cell(filter_table, 1, 29, get_dot(filter_29), text_color=get_color(filter_29), text_size=get_table_size(), bgcolor=get_color(filter_29))
    
    table.cell(filter_table, 0, 30, "Force Index", text_color=color.green, text_size=get_table_size())
    table.cell(filter_table, 1, 30, get_dot(filter_30), text_color=get_color(filter_30), text_size=get_table_size(), bgcolor=get_color(filter_30))
    
    table.cell(filter_table, 0, 31, "Pivot Points", text_color=color.green, text_size=get_table_size())
    table.cell(filter_table, 1, 31, get_dot(filter_31), text_color=get_color(filter_31), text_size=get_table_size(), bgcolor=get_color(filter_31))
    
    table.cell(filter_table, 0, 32, "Support/Resistance", text_color=color.green, text_size=get_table_size())
    table.cell(filter_table, 1, 32, get_dot(filter_32), text_color=get_color(filter_32), text_size=get_table_size(), bgcolor=get_color(filter_32))
    
    table.cell(filter_table, 0, 33, "Fibonacci Retracement", text_color=color.green, text_size=get_table_size())
    table.cell(filter_table, 1, 33, get_dot(filter_33), text_color=get_color(filter_33), text_size=get_table_size(), bgcolor=get_color(filter_33))
    
    table.cell(filter_table, 0, 34, "Price Action", text_color=color.green, text_size=get_table_size())
    table.cell(filter_table, 1, 34, get_dot(filter_34), text_color=get_color(filter_34), text_size=get_table_size(), bgcolor=get_color(filter_34))
    
    table.cell(filter_table, 0, 35, "Gap Analysis", text_color=color.green, text_size=get_table_size())
    table.cell(filter_table, 1, 35, get_dot(filter_35), text_color=get_color(filter_35), text_size=get_table_size(), bgcolor=get_color(filter_35))
    
    table.cell(filter_table, 0, 36, "High/Low Analysis", text_color=color.green, text_size=get_table_size())
    table.cell(filter_table, 1, 36, get_dot(filter_36), text_color=get_color(filter_36), text_size=get_table_size(), bgcolor=get_color(filter_36))
    
    table.cell(filter_table, 0, 37, "Breakout Detection", text_color=color.green, text_size=get_table_size())
    table.cell(filter_table, 1, 37, get_dot(filter_37), text_color=get_color(filter_37), text_size=get_table_size(), bgcolor=get_color(filter_37))
    
    table.cell(filter_table, 0, 38, "Trend Line", text_color=color.green, text_size=get_table_size())
    table.cell(filter_table, 1, 38, get_dot(filter_38), text_color=get_color(filter_38), text_size=get_table_size(), bgcolor=get_color(filter_38))
    
    table.cell(filter_table, 0, 39, "Channel Analysis", text_color=color.green, text_size=get_table_size())
    table.cell(filter_table, 1, 39, get_dot(filter_39), text_color=get_color(filter_39), text_size=get_table_size(), bgcolor=get_color(filter_39))
    
    table.cell(filter_table, 0, 40, "Moving Average Convergence", text_color=color.green, text_size=get_table_size())
    table.cell(filter_table, 1, 40, get_dot(filter_40), text_color=get_color(filter_40), text_size=get_table_size(), bgcolor=get_color(filter_40))


grupSec = input.string(defval='1', options=['1', '2', '3', '4', '5','6','7','8','9','10','11','12','13','14','ÖZEL LİSTE'], group='Taraması yapılacak 40\'arlı gruplardan birini seçin', title='Grup seç')

per = input.timeframe(defval='', title='PERİYOT',group = "Tarama yapmak istediğiniz periyotu seçin")

// Kullanıcı girişleri
loc1 = input.int(defval=10, title='Konum Ayarı 1', minval=-100, maxval=100, step=5, group='Tablonun konumunu belirleyin')
loc2 = input.int(defval=15, title='Konum Ayarı 2', minval=-100, maxval=100, step=5, group='Tablonun konumunu belirleyin')

loc3 = input.int(defval=20, title='Konum Ayarı 3', minval=-100, maxval=100, step=5, group='Tablonun konumunu belirleyin')
loc4 = input.int(defval=25, title='Konum Ayarı 4', minval=-100, maxval=100, step=5, group='Tablonun konumunu belirleyin')
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Filtreleri diziye ekle
filters = array.new_bool(40)
array.set(filters, 0, filter_1)
array.set(filters, 1, filter_2)
array.set(filters, 2, filter_3)
array.set(filters, 3, filter_4)
array.set(filters, 4, filter_5)
array.set(filters, 5, filter_6)
array.set(filters, 6, filter_7)
array.set(filters, 7, filter_8)
array.set(filters, 8, filter_9)
array.set(filters, 9, filter_10)
array.set(filters, 10, filter_11)
array.set(filters, 11, filter_12)
array.set(filters, 12, filter_13)
array.set(filters, 13, filter_14)
array.set(filters, 14, filter_15)
array.set(filters, 15, filter_16)
array.set(filters, 16, filter_17)
array.set(filters, 17, filter_18)
array.set(filters, 18, filter_19)
array.set(filters, 19, filter_20)
array.set(filters, 20, filter_21)
array.set(filters, 21, filter_22)
array.set(filters, 22, filter_23)
array.set(filters, 23, filter_24)
array.set(filters, 24, filter_25)
array.set(filters, 25, filter_26)
array.set(filters, 26, filter_27)
array.set(filters, 27, filter_28)
array.set(filters, 28, filter_29)
array.set(filters, 29, filter_30)
array.set(filters, 30, filter_31)
array.set(filters, 31, filter_32)
array.set(filters, 32, filter_33)
array.set(filters, 33, filter_34)
array.set(filters, 34, filter_35)
array.set(filters, 35, filter_36)
array.set(filters, 36, filter_37)
array.set(filters, 37, filter_38)
array.set(filters, 38, filter_39)
array.set(filters, 39, filter_40)

// Geçen filtre sayısını hesapla
passed_filters = 0
for i = 0 to array.size(filters) - 1 by 1
    if array.get(filters, i)
        passed_filters := passed_filters + 1
        passed_filters

// Sinyal gücünü belirle
signal_strength = passed_filters >= 35 ? 'Çok Güçlü' : passed_filters >= 30 ? 'Güçlü' : passed_filters >= 25 ? 'Orta' : passed_filters >= 20 ? 'Zayıf' : 'Çok Zayıf'

signal_color = passed_filters >= 35 ? color.green : passed_filters >= 30 ? color.lime : passed_filters >= 25 ? color.yellow : passed_filters >= 20 ? color.orange : color.red

// Sinyalleri göster - Yatay yazı ile
//if show_signals and passed_filters >= 26
   // label.new(bar_index, low - syminfo.mintick * 20, text = '▲ ' + str.tostring(passed_filters), style = label.style_label_up, color = signal_color, textcolor = color.white, size = size.small)

//if show_signals and passed_filters <= 15
   // label.new(bar_index, high + syminfo.mintick * 20, text = '▼ ' + str.tostring(passed_filters), style = label.style_label_down, color = color.red, textcolor = color.white, size = size.small)







// === LABEL LİSTESİ ===
var label[] signalLabels = array.new<label>()

// === ESKİ LABEL'LARI SİL (5 bar öncesindekiler) ===
if array.size(signalLabels) > 0
    i = array.size(signalLabels) - 1
    while i >= 0
        lbl = array.get(signalLabels, i)
        if label.get_x(lbl) < bar_index - 5
            label.delete(lbl)
            array.remove(signalLabels, i)
        i := i - 1

// === SADECE SON 5 BARDA SİNYAL ÜRET ===
if show_signals and passed_filters >= 27 and bar_index >= bar_index - 5
    lbl = label.new(bar_index, low - syminfo.mintick * 20, text='▲ ' + str.tostring(passed_filters), style=label.style_label_up, color=color.green, textcolor=color.white, size=size.small)
    array.push(signalLabels, lbl)

if show_signals and passed_filters <= 15 and bar_index >= bar_index - 5
    lbl = label.new(bar_index, high + syminfo.mintick * 20, text='▼ ' + str.tostring(passed_filters), style=label.style_label_down, color=color.red, textcolor=color.white, size=size.small)
    array.push(signalLabels, lbl)

/////////////////
func() =>
    condition1 = passed_filters >= 25 and passed_filters <= 27
    condition2 = passed_filters >= 28 and passed_filters <= 30
    condition3 = passed_filters >= 31 and passed_filters <= 34
    condition4 = passed_filters >= 35 and passed_filters <= 40
    [condition1, condition2, condition3, condition4]




////////////////////////////

s01 =  input.symbol(title='1',  defval='AKBNK',group = "╠═════════════ ÖZEL LİSTE ═════════════╣")
s02 =  input.symbol(title='2',  defval='ALARK')
s03 =  input.symbol(title='3',  defval='ARCLK')
s04 =  input.symbol(title='4',  defval='ASELS')
s05 =  input.symbol(title='5',  defval='ASTOR')
s06 =  input.symbol(title='6',  defval='BIMAS')
s07 =  input.symbol(title='7',  defval='EKGYO')
s08 =  input.symbol(title='8',  defval='ENKAI')
s09 =  input.symbol(title='9',  defval='EREGL')
s10 = input.symbol(title='10', defval='FROTO')
s11 = input.symbol(title='11', defval='GARAN')
s12 = input.symbol(title='12', defval='GUBRF')
s13 = input.symbol(title='13', defval='HEKTS')
s14 = input.symbol(title='14', defval='ISCTR')
s15 = input.symbol(title='15', defval='KCHOL')
s16 = input.symbol(title='16', defval='KOZAA')
s17 = input.symbol(title='17', defval='KOZAL')
s18 = input.symbol(title='18', defval='KRDMD')
s19 = input.symbol(title='19', defval='ODAS')
s20 = input.symbol(title='20', defval='PETKM')
s21 = input.symbol(title='21', defval='PGSUS')
s22 = input.symbol(title='22', defval='SAHOL')
s23 = input.symbol(title='23', defval='SASA')
s24 = input.symbol(title='24', defval='SISE')
s25 = input.symbol(title='25', defval='TAVHL')
s26 = input.symbol(title='26', defval='TCELL')
s27 = input.symbol(title='27', defval='THYAO')
s28 = input.symbol(title='28', defval='TOASO')
s29 = input.symbol(title='29', defval='AKSEN')
s30 = input.symbol(title='30', defval='TUPRS')
s31 = input.symbol(title='31', defval='YKBNK')
s32 = input.symbol(title='32', defval='DOHOL')
s33 = input.symbol(title='33', defval='XUTUM')
s34 = input.symbol(title='34', defval='YIGIT')
s35 = input.symbol(title='35', defval='HOROZ')
s36 = input.symbol(title='36', defval='KOTON')
s37 = input.symbol(title='37', defval='LILAK')
s38 = input.symbol(title='38', defval='SEGMN')
s39 = input.symbol(title='39', defval='EFORC')
s40 = input.symbol(title='40', defval='ALTNY')
/////////////////

// Symbols 
a01 = grupSec == '1' ? 'BIST:A1CAP' : grupSec == '2' ? 'BIST:ARCLK' : grupSec == '3' ? 'BIST:BIGCH' : grupSec == '4' ? 'BIST:CEMTS' : grupSec == '5' ? 'BIST:DZGYO' : grupSec == '6' ? 'BIST:FLAP' : grupSec == '7' ? 'BIST:HEKTS' : grupSec == '8' ? 'BIST:IZMDC' : grupSec == '9' ? 'BIST:KRSTL' : grupSec == '10' ? 'BIST:MHRGY' : grupSec == '11' ? 'BIST:OZRDN' : grupSec == '12' ? 'BIST:RYGYO' : grupSec == '13' ? 'BIST:TABGD' : grupSec == '14' ? 'BIST:ULUUN' : grupSec == 'ÖZEL LİSTE' ? s01 : na
a02 = grupSec == '1' ? 'BIST:ACSEL' : grupSec == '2' ? 'BIST:ARDYZ' : grupSec == '3' ? 'BIST:BIMAS' : grupSec == '4' ? 'BIST:CEOEM' : grupSec == '5' ? 'BIST:EBEBK' : grupSec == '6' ? 'BIST:FMIZP' : grupSec == '7' ? 'BIST:HKTM' : grupSec == '8' ? 'BIST:JANTS' : grupSec == '9' ? 'BIST:KRTEK' : grupSec == '10' ? 'BIST:MIATK' : grupSec == '11' ? 'BIST:OZSUB' : grupSec == '12' ? 'BIST:RYSAS' : grupSec == '13' ? 'BIST:TARKM' : grupSec == '14' ? 'BIST:UMPAS' : grupSec == 'ÖZEL LİSTE' ? s02 : na
a03 = grupSec == '1' ? 'BIST:ADEL' : grupSec == '2' ? 'BIST:ARENA' : grupSec == '3' ? 'BIST:BINHO' : grupSec == '4' ? 'BIST:CIMSA' : grupSec == '5' ? 'BIST:ECILC' : grupSec == '6' ? 'BIST:FONET' : grupSec == '7' ? 'BIST:HLGYO' : grupSec == '8' ? 'BIST:KAPLM' : grupSec == '9' ? 'BIST:KRVGD' : grupSec == '10' ? 'BIST:LYDHO' : grupSec == '11' ? 'BIST:PAGYO' : grupSec == '12' ? 'BIST:SAFKR' : grupSec == '13' ? 'BIST:TATEN' : grupSec == '14' ? 'BIST:UNLU' : grupSec == 'ÖZEL LİSTE' ? s03 : na
a04 = grupSec == '1' ? 'BIST:ADESE' : grupSec == '2' ? 'BIST:ARSAN' : grupSec == '3' ? 'BIST:BIOEN' : grupSec == '4' ? 'BIST:CLEBI' : grupSec == '5' ? 'BIST:ECZYT' : grupSec == '6' ? 'BIST:FORMT' : grupSec == '7' ? 'BIST:HTTBT' : grupSec == '8' ? 'BIST:KAREL' : grupSec == '9' ? 'BIST:KSTUR' : grupSec == '10' ? 'BIST:MMCAS' : grupSec == '11' ? 'BIST:PAMEL' : grupSec == '12' ? 'BIST:SAHOL' : grupSec == '13' ? 'BIST:TATEN' : grupSec == '14' ? 'BIST:USAK' : grupSec == 'ÖZEL LİSTE' ? s04 : na
a05 = grupSec == '1' ? 'BIST:ADGYO' : grupSec == '2' ? 'BIST:ARTMS' : grupSec == '3' ? 'BIST:BIZIM' : grupSec == '4' ? 'BIST:CMBTN' : grupSec == '5' ? 'BIST:EDATA' : grupSec == '6' ? 'BIST:FORTE' : grupSec == '7' ? 'BIST:HUBVC' : grupSec == '8' ? 'BIST:KARSN' : grupSec == '9' ? 'BIST:KTLEV' : grupSec == '10' ? 'BIST:MNDRS' : grupSec == '11' ? 'BIST:PAPIL' : grupSec == '12' ? 'BIST:SAMAT' : grupSec == '13' ? 'BIST:TAVHL' : grupSec == '14' ? 'BIST:INTEK' : grupSec == 'ÖZEL LİSTE' ? s05 : na
a06 = grupSec == '1' ? 'BIST:AEFES' : grupSec == '2' ? 'BIST:ARZUM' : grupSec == '3' ? 'BIST:BIGCH' : grupSec == '4' ? 'BIST:CMENT' : grupSec == '5' ? 'BIST:EDIP' : grupSec == '6' ? 'BIST:FRIGO' : grupSec == '7' ? 'BIST:HUNER' : grupSec == '8' ? 'BIST:KARTN' : grupSec == '9' ? 'BIST:KTSKR' : grupSec == '10' ? 'BIST:MNDTR' : grupSec == '11' ? 'BIST:PARSN' : grupSec == '12' ? 'BIST:SANEL' : grupSec == '13' ? 'BIST:TBORG' : grupSec == '14' ? 'BIST:VAKBN' : grupSec == 'ÖZEL LİSTE' ? s06 : na
a07 = grupSec == '1' ? 'BIST:AFYON' : grupSec == '2' ? 'BIST:ASELS' : grupSec == '3' ? 'BIST:BIMAS' : grupSec == '4' ? 'BIST:CONSE' : grupSec == '5' ? 'BIST:EGEEN' : grupSec == '6' ? 'BIST:FROTO' : grupSec == '7' ? 'BIST:HURGZ' : grupSec == '8' ? 'BIST:KARYE' : grupSec == '9' ? 'BIST:KUTPO' : grupSec == '10' ? 'BIST:MOBTL' : grupSec == '11' ? 'BIST:PASEU' : grupSec == '12' ? 'BIST:SANFM' : grupSec == '13' ? 'BIST:TCELL' : grupSec == '14' ? 'BIST:VAKFN' : grupSec == 'ÖZEL LİSTE' ? s07 : na
a08 = grupSec == '1' ? 'BIST:AGESA' : grupSec == '2' ? 'BIST:ASGYO' : grupSec == '3' ? 'BIST:BINHO' : grupSec == '4' ? 'BIST:COSMO' : grupSec == '5' ? 'BIST:EGEPO' : grupSec == '6' ? 'BIST:FZLGY' : grupSec == '7' ? 'BIST:ICBCT' : grupSec == '8' ? 'BIST:KATMR' : grupSec == '9' ? 'BIST:KUVVA' : grupSec == '10' ? 'BIST:MOGAN' : grupSec == '11' ? 'BIST:PATEK' : grupSec == '12' ? 'BIST:SANKO' : grupSec == '13' ? 'BIST:TDGYO' : grupSec == '14' ? 'BIST:VAKKO' : grupSec == 'ÖZEL LİSTE' ? s08 : na
a09 = grupSec == '1' ? 'BIST:AGHOL' : grupSec == '2' ? 'BIST:ASTOR' : grupSec == '3' ? 'BIST:BIOEN' : grupSec == '4' ? 'BIST:CRDFA' : grupSec == '5' ? 'BIST:EGGUB' : grupSec == '6' ? 'BIST:GARAN' : grupSec == '7' ? 'BIST:ICUGS' : grupSec == '8' ? 'BIST:KAYSE' : grupSec == '9' ? 'BIST:KUYAS' : grupSec == '10' ? 'BIST:MPARK' : grupSec == '11' ? 'BIST:PCILT' : grupSec == '12' ? 'BIST:SARKY' : grupSec == '13' ? 'BIST:TEKTU' : grupSec == '14' ? 'BIST:VANGD' : grupSec == 'ÖZEL LİSTE' ? s09 : na
a101 = grupSec == '1' ? 'BIST:AGROT' : grupSec == '2' ? 'BIST:ASUZU' : grupSec == '3' ? 'BIST:BIZIM' : grupSec == '4' ? 'BIST:CRFSA' : grupSec == '5' ? 'BIST:EGPRO' : grupSec == '6' ? 'BIST:GARFA' : grupSec == '7' ? 'BIST:IDGYO' : grupSec == '8' ? 'BIST:KBORU' : grupSec == '9' ? 'BIST:KZBGY' : grupSec == '10' ? 'BIST:MRGYO' : grupSec == '11' ? 'BIST:BEGYO' : grupSec == '12' ? 'BIST:SASA' : grupSec == '13' ? 'BIST:TERA' : grupSec == '14' ? 'BIST:VBTYZ' : grupSec == 'ÖZEL LİSTE' ? s10 : na
a11 = grupSec == '1' ? 'BIST:AGYO' : grupSec == '2' ? 'BIST:ATAGY' : grupSec == '3' ? 'BIST:BJKAS' : grupSec == '4' ? 'BIST:CUSAN' : grupSec == '5' ? 'BIST:EGSER' : grupSec == '6' ? 'BIST:GEDIK' : grupSec == '7' ? 'BIST:IEYHO' : grupSec == '8' ? 'BIST:KCAER' : grupSec == '9' ? 'BIST:KZGYO' : grupSec == '10' ? 'BIST:MRSHL' : grupSec == '11' ? 'BIST:PEKGY' : grupSec == '12' ? 'BIST:SAYAS' : grupSec == '13' ? 'BIST:LYDYE' : grupSec == '14' ? 'BIST:VERTU' : grupSec == 'ÖZEL LİSTE' ? s11 : na
a12 = grupSec == '1' ? 'BIST:AHGAZ' : grupSec == '2' ? 'BIST:ATAKP' : grupSec == '3' ? 'BIST:BLCYT' : grupSec == '4' ? 'BIST:CVKMD' : grupSec == '5' ? 'BIST:EKGYO' : grupSec == '6' ? 'BIST:GEDZA' : grupSec == '7' ? 'BIST:IHAAS' : grupSec == '8' ? 'BIST:KCHOL' : grupSec == '9' ? 'BIST:LIDER' : grupSec == '10' ? 'BIST:MSGYO' : grupSec == '11' ? 'BIST:PENGD' : grupSec == '12' ? 'BIST:SDTTR' : grupSec == '13' ? 'BIST:TEZOL' : grupSec == '14' ? 'BIST:VERUS' : grupSec == 'ÖZEL LİSTE' ? s12 : na
a13 = grupSec == '1' ? 'BIST:AKBNK' : grupSec == '2' ? 'BIST:ATATP' : grupSec == '3' ? 'BIST:BMSCH' : grupSec == '4' ? 'BIST:CWENE' : grupSec == '5' ? 'BIST:EKIZ' : grupSec == '6' ? 'BIST:GENIL' : grupSec == '7' ? 'BIST:IHEVA' : grupSec == '8' ? 'BIST:KENT' : grupSec == '9' ? 'BIST:LIDFA' : grupSec == '10' ? 'BIST:MTRKS' : grupSec == '11' ? 'BIST:PENTA' : grupSec == '12' ? 'BIST:SEGYO' : grupSec == '13' ? 'BIST:TGSAS' : grupSec == '14' ? 'BIST:VESBE' : grupSec == 'ÖZEL LİSTE' ? s13 : na
a14 = grupSec == '1' ? 'BIST:AKCNS' : grupSec == '2' ? 'BIST:ATEKS' : grupSec == '3' ? 'BIST:BMSTL' : grupSec == '4' ? 'BIST:DAGHL' : grupSec == '5' ? 'BIST:EKOS' : grupSec == '6' ? 'BIST:GENTS' : grupSec == '7' ? 'BIST:IHGZT' : grupSec == '8' ? 'BIST:KERVN' : grupSec == '9' ? 'BIST:LINK' : grupSec == '10' ? 'BIST:MTRYO' : grupSec == '11' ? 'BIST:PETKM' : grupSec == '12' ? 'BIST:SEKFK' : grupSec == '13' ? 'BIST:THYAO' : grupSec == '14' ? 'BIST:VESTL' : grupSec == 'ÖZEL LİSTE' ? s14 : na
a15 = grupSec == '1' ? 'BIST:AKENR' : grupSec == '2' ? 'BIST:ATLAS' : grupSec == '3' ? 'BIST:BNTAS' : grupSec == '4' ? 'BIST:DAGI' : grupSec == '5' ? 'BIST:EKSUN' : grupSec == '6' ? 'BIST:GEREL' : grupSec == '7' ? 'BIST:IHLAS' : grupSec == '8' ? 'BIST:KERVT' : grupSec == '9' ? 'BIST:LKMNH' : grupSec == '10' ? 'BIST:MZHLD' : grupSec == '11' ? 'BIST:PETUN' : grupSec == '12' ? 'BIST:SEKUR' : grupSec == '13' ? 'BIST:TKFEN' : grupSec == '14' ? 'BIST:VKFYO' : grupSec == 'ÖZEL LİSTE' ? s15 : na
a16 = grupSec == '1' ? 'BIST:AKFGY' : grupSec == '2' ? 'BIST:ATSYH' : grupSec == '3' ? 'BIST:BOBET' : grupSec == '4' ? 'BIST:DAPGM' : grupSec == '5' ? 'BIST:ELITE' : grupSec == '6' ? 'BIST:GESAN' : grupSec == '7' ? 'BIST:IHLGM' : grupSec == '8' ? 'BIST:KFEIN' : grupSec == '9' ? 'BIST:LMKDC' : grupSec == '10' ? 'BIST:NATEN' : grupSec == '11' ? 'BIST:PGSUS' : grupSec == '12' ? 'BIST:SELEC' : grupSec == '13' ? 'BIST:TKNSA' : grupSec == '14' ? 'BIST:VKGYO' : grupSec == 'ÖZEL LİSTE' ? s16 : na
a17 = grupSec == '1' ? 'BIST:AKFYE' : grupSec == '2' ? 'BIST:AVGYO' : grupSec == '3' ? 'BIST:BORLS' : grupSec == '4' ? 'BIST:DARDL' : grupSec == '5' ? 'BIST:EMKEL' : grupSec == '6' ? 'BIST:GIPTA' : grupSec == '7' ? 'BIST:IHYAY' : grupSec == '8' ? 'BIST:KGYO' : grupSec == '9' ? 'BIST:LOGO' : grupSec == '10' ? 'BIST:NETAS' : grupSec == '11' ? 'BIST:PINSU' : grupSec == '12' ? 'BIST:SELGD' : grupSec == '13' ? 'BIST:TLMAN' : grupSec == '14' ? 'BIST:VKING' : grupSec == 'ÖZEL LİSTE' ? s17 : na
a188 = grupSec == '1' ? 'BIST:AKGRT' : grupSec == '2' ? 'BIST:AVHOL' : grupSec == '3' ? 'BIST:BORSK' : grupSec == '4' ? 'BIST:DENGE' : grupSec == '5' ? 'BIST:EMNIS' : grupSec == '6' ? 'BIST:GLBMD' : grupSec == '7' ? 'BIST:IMASM' : grupSec == '8' ? 'BIST:KIMMR' : grupSec == '9' ? 'BIST:LRSHO' : grupSec == '10' ? 'BIST:NIBAS' : grupSec == '11' ? 'BIST:PKART' : grupSec == '12' ? 'BIST:SELVA' : grupSec == '13' ? 'BIST:TMPOL' : grupSec == '14' ? 'BIST:VRGYO' : grupSec == 'ÖZEL LİSTE' ? s18 : na
a19 = grupSec == '1' ? 'BIST:AKMGY' : grupSec == '2' ? 'BIST:AVOD' : grupSec == '3' ? 'BIST:BOSSA' : grupSec == '4' ? 'BIST:DERHL' : grupSec == '5' ? 'BIST:ENERY' : grupSec == '6' ? 'BIST:GLCVY' : grupSec == '7' ? 'BIST:INDES' : grupSec == '8' ? 'BIST:KLGYO' : grupSec == '9' ? 'BIST:LUKSK' : grupSec == '10' ? 'BIST:NTGAZ' : grupSec == '11' ? 'BIST:PKENT' : grupSec == '12' ? 'BIST:SEYKM' : grupSec == '13' ? 'BIST:TMSN' : grupSec == '14' ? 'BIST:YAPRK' : grupSec == 'ÖZEL LİSTE' ? s19 : na
a20 = grupSec == '1' ? 'BIST:AKSA' : grupSec == '2' ? 'BIST:AVPGY' : grupSec == '3' ? 'BIST:BRISA' : grupSec == '4' ? 'BIST:DERIM' : grupSec == '5' ? 'BIST:ENJSA' : grupSec == '6' ? 'BIST:GLRYH' : grupSec == '7' ? 'BIST:INFO' : grupSec == '8' ? 'BIST:KLKIM' : grupSec == '9' ? 'BIST:MAALT' : grupSec == '10' ? 'BIST:NTHOL' : grupSec == '11' ? 'BIST:PLTUR' : grupSec == '12' ? 'BIST:SILVR' : grupSec == '13' ? 'BIST:TNZTP' : grupSec == '14' ? 'BIST:YATAS' : grupSec == 'ÖZEL LİSTE' ? s20 : na
a21 = grupSec == '1' ? 'BIST:AKSEN' : grupSec == '2' ? 'BIST:AVTUR' : grupSec == '3' ? 'BIST:BRKO' : grupSec == '4' ? 'BIST:DESA' : grupSec == '5' ? 'BIST:ENKAI' : grupSec == '6' ? 'BIST:GLYHO' : grupSec == '7' ? 'BIST:INGRM' : grupSec == '8' ? 'BIST:KLMSN' : grupSec == '9' ? 'BIST:MACKO' : grupSec == '10' ? 'BIST:NUGYO' : grupSec == '11' ? 'BIST:PNLSN' : grupSec == '12' ? 'BIST:SISE' : grupSec == '13' ? 'BIST:TOASO' : grupSec == '14' ? 'BIST:YAYLA' : grupSec == 'ÖZEL LİSTE' ? s21 : na
a22 = grupSec == '1' ? 'BIST:AKSGY' : grupSec == '2' ? 'BIST:AYCES' : grupSec == '3' ? 'BIST:BRKSN' : grupSec == '4' ? 'BIST:DESPC' : grupSec == '5' ? 'BIST:ENSRI' : grupSec == '6' ? 'BIST:GMTAS' : grupSec == '7' ? 'BIST:INTEM' : grupSec == '8' ? 'BIST:KLNMA' : grupSec == '9' ? 'BIST:MAGEN' : grupSec == '10' ? 'BIST:NUHCM' : grupSec == '11' ? 'BIST:PNSUT' : grupSec == '12' ? 'BIST:SKBNK' : grupSec == '13' ? 'BIST:TRCAS' : grupSec == '14' ? 'BIST:YBTAS' : grupSec == 'ÖZEL LİSTE' ? s22 : na
a23 = grupSec == '1' ? 'BIST:AKSUE' : grupSec == '2' ? 'BIST:AYDEM' : grupSec == '3' ? 'BIST:BRKVY' : grupSec == '4' ? 'BIST:DEVA' : grupSec == '5' ? 'BIST:EPLAS' : grupSec == '6' ? 'BIST:GOKNR' : grupSec == '7' ? 'BIST:INVEO' : grupSec == '8' ? 'BIST:KLRHO' : grupSec == '9' ? 'BIST:MAKIM' : grupSec == '10' ? 'BIST:OBAMS' : grupSec == '11' ? 'BIST:POLHO' : grupSec == '12' ? 'BIST:SKTAS' : grupSec == '13' ? 'BIST:TRGYO' : grupSec == '14' ? 'BIST:YEOTK' : grupSec == 'ÖZEL LİSTE' ? s23 : na
a24 = grupSec == '1' ? 'BIST:AKYHO' : grupSec == '2' ? 'BIST:AYEN' : grupSec == '3' ? 'BIST:BRLSM' : grupSec == '4' ? 'BIST:DGATE' : grupSec == '5' ? 'BIST:ERBOS' : grupSec == '6' ? 'BIST:GOLTS' : grupSec == '7' ? 'BIST:INVES' : grupSec == '8' ? 'BIST:KLSER' : grupSec == '9' ? 'BIST:MAKTK' : grupSec == '10' ? 'BIST:OBASE' : grupSec == '11' ? 'BIST:POLTK' : grupSec == '12' ? 'BIST:SKYLP' : grupSec == '13' ? 'BIST:TRILC' : grupSec == '14' ? 'BIST:YESIL' : grupSec == 'ÖZEL LİSTE' ? s24 : na
a25 = grupSec == '1' ? 'BIST:ALARK' : grupSec == '2' ? 'BIST:AYES' : grupSec == '3' ? 'BIST:BRMEN' : grupSec == '4' ? 'BIST:DGGYO' : grupSec == '5' ? 'BIST:ERCB' : grupSec == '6' ? 'BIST:GOODY' : grupSec == '7' ? 'BIST:IPEKE' : grupSec == '8' ? 'BIST:KLSYN' : grupSec == '9' ? 'BIST:MANAS' : grupSec == '10' ? 'BIST:ODAS' : grupSec == '11' ? 'BIST:PRDGS' : grupSec == '12' ? 'BIST:SKYMD' : grupSec == '13' ? 'BIST:TSGYO' : grupSec == '14' ? 'BIST:YGGYO' : grupSec == 'ÖZEL LİSTE' ? s25 : na
a26 = grupSec == '1' ? 'BIST:ALBRK' : grupSec == '2' ? 'BIST:AYGAZ' : grupSec == '3' ? 'BIST:BRSAN' : grupSec == '4' ? 'BIST:DGNMO' : grupSec == '5' ? 'BIST:EREGL' : grupSec == '6' ? 'BIST:GOZDE' : grupSec == '7' ? 'BIST:ISATR' : grupSec == '8' ? 'BIST:KMPUR' : grupSec == '9' ? 'BIST:MARBL' : grupSec == '10' ? 'BIST:OFSYM' : grupSec == '11' ? 'BIST:PRKAB' : grupSec == '12' ? 'BIST:SMART' : grupSec == '13' ? 'BIST:TSKB' : grupSec == '14' ? 'BIST:YGYO' : grupSec == 'ÖZEL LİSTE' ? s26 : na
a27 = grupSec == '1' ? 'BIST:ALCAR' : grupSec == '2' ? 'BIST:AZTEK' : grupSec == '3' ? 'BIST:BRYAT' : grupSec == '4' ? 'BIST:DIRIT' : grupSec == '5' ? 'BIST:ERSU' : grupSec == '6' ? 'BIST:GRNYO' : grupSec == '7' ? 'BIST:ISBIR' : grupSec == '8' ? 'BIST:KNFRT' : grupSec == '9' ? 'BIST:MARKA' : grupSec == '10' ? 'BIST:ONCSM' : grupSec == '11' ? 'BIST:PRKME' : grupSec == '12' ? 'BIST:SMRTG' : grupSec == '13' ? 'BIST:TTKOM' : grupSec == '14' ? 'BIST:YKBNK' : grupSec == 'ÖZEL LİSTE' ? s27 : na
a288 = grupSec == '1' ? 'BIST:ALCTL' : grupSec == '2' ? 'BIST:BAGFS' : grupSec == '3' ? 'BIST:BSOKE' : grupSec == '4' ? 'BIST:DITAS' : grupSec == '5' ? 'BIST:ESCAR' : grupSec == '6' ? 'BIST:GRSEL' : grupSec == '7' ? 'BIST:ISBTR' : grupSec == '8' ? 'BIST:KONKA' : grupSec == '9' ? 'BIST:MARTI' : grupSec == '10' ? 'BIST:ORCAY' : grupSec == '11' ? 'BIST:PRZMA' : grupSec == '12' ? 'BIST:SNGYO' : grupSec == '13' ? 'BIST:TTKOM' : grupSec == '14' ? 'BIST:YKSLN' : grupSec == 'ÖZEL LİSTE' ? s28 : na
a29 = grupSec == '1' ? 'BIST:ALFAS' : grupSec == '2' ? 'BIST:BAKAB' : grupSec == '3' ? 'BIST:BTCIM' : grupSec == '4' ? 'BIST:DMRGD' : grupSec == '5' ? 'BIST:ESCOM' : grupSec == '6' ? 'BIST:GRTHO' : grupSec == '7' ? 'BIST:ISCTR' : grupSec == '8' ? 'BIST:KONTR' : grupSec == '9' ? 'BIST:MAVI' : grupSec == '10' ? 'BIST:ORGE' : grupSec == '11' ? 'BIST:PSDTC' : grupSec == '12' ? 'BIST:SNICA' : grupSec == '13' ? 'BIST:TTRAK' : grupSec == '14' ? 'BIST:YONGA' : grupSec == 'ÖZEL LİSTE' ? s29 : na
a30 = grupSec == '1' ? 'BIST:ALGYO' : grupSec == '2' ? 'BIST:BALAT' : grupSec == '3' ? 'BIST:BUCIM' : grupSec == '4' ? 'BIST:DMSAS' : grupSec == '5' ? 'BIST:ESEN' : grupSec == '6' ? 'BIST:GSDDE' : grupSec == '7' ? 'BIST:ISDMR' : grupSec == '8' ? 'BIST:KONYA' : grupSec == '9' ? 'BIST:MEDTR' : grupSec == '10' ? 'BIST:ORMA' : grupSec == '11' ? 'BIST:PSGYO' : grupSec == '12' ? 'BIST:SNKRN' : grupSec == '13' ? 'BIST:TUCLK' : grupSec == '14' ? 'BIST:YUNSA' : grupSec == 'ÖZEL LİSTE' ? s30 : na
a31 = grupSec == '1' ? 'BIST:ALKA' : grupSec == '2' ? 'BIST:BANVT' : grupSec == '3' ? 'BIST:BURCE' : grupSec == '4' ? 'BIST:DNISI' : grupSec == '5' ? 'BIST:ETILR' : grupSec == '6' ? 'BIST:GSDHO' : grupSec == '7' ? 'BIST:ISFIN' : grupSec == '8' ? 'BIST:KOPOL' : grupSec == '9' ? 'BIST:MEGAP' : grupSec == '10' ? 'BIST:OSMEN' : grupSec == '11' ? 'BIST:QNBTR' : grupSec == '12' ? 'BIST:SNPAM' : grupSec == '13' ? 'BIST:TUKAS' : grupSec == '14' ? 'BIST:YYAPI' : grupSec == 'ÖZEL LİSTE' ? s31 : na
a32 = grupSec == '1' ? 'BIST:ALKIM' : grupSec == '2' ? 'BIST:BARMA' : grupSec == '3' ? 'BIST:BURVA' : grupSec == '4' ? 'BIST:DOAS' : grupSec == '5' ? 'BIST:ETYAT' : grupSec == '6' ? 'BIST:GSRAY' : grupSec == '7' ? 'BIST:ISGSY' : grupSec == '8' ? 'BIST:KORDS' : grupSec == '9' ? 'BIST:MEGMT' : grupSec == '10' ? 'BIST:OSTIM' : grupSec == '11' ? 'BIST:QNBTR' : grupSec == '12' ? 'BIST:SODSN' : grupSec == '13' ? 'BIST:TUPRS' : grupSec == '14' ? 'BIST:YYLGD' : grupSec == 'ÖZEL LİSTE' ? s32 : na
a33 = grupSec == '1' ? 'BIST:ALMAD' : grupSec == '2' ? 'BIST:BASCM' : grupSec == '3' ? 'BIST:BVSAN' : grupSec == '4' ? 'BIST:DOBUR' : grupSec == '5' ? 'BIST:EUHOL' : grupSec == '6' ? 'BIST:GUBRF' : grupSec == '7' ? 'BIST:ISGYO' : grupSec == '8' ? 'BIST:KOZAA' : grupSec == '9' ? 'BIST:MEKAG' : grupSec == '10' ? 'BIST:OTKAR' : grupSec == '11' ? 'BIST:QUAGR' : grupSec == '12' ? 'BIST:SOKE' : grupSec == '13' ? 'BIST:TUREX' : grupSec == '14' ? 'BIST:ZEDUR' : grupSec == 'ÖZEL LİSTE' ? s33 : na
a34 = grupSec == '1' ? 'BIST:ALTIN' : grupSec == '2' ? 'BIST:BASGZ' : grupSec == '3' ? 'BIST:BYDNR' : grupSec == '4' ? 'BIST:DOCO' : grupSec == '5' ? 'BIST:EUKYO' : grupSec == '6' ? 'BIST:GWIND' : grupSec == '7' ? 'BIST:ISKPL' : grupSec == '8' ? 'BIST:KOZAL' : grupSec == '9' ? 'BIST:MEPET' : grupSec == '10' ? 'BIST:OTTO' : grupSec == '11' ? 'BIST:RALYH' : grupSec == '12' ? 'BIST:SOKM' : grupSec == '13' ? 'BIST:TURGG' : grupSec == '14' ? 'BIST:ZOREN' : grupSec == 'ÖZEL LİSTE' ? s34 : na
a35 = grupSec == '1' ? 'BIST:ALVES' : grupSec == '2' ? 'BIST:BAYRK' : grupSec == '3' ? 'BIST:CANTE' : grupSec == '4' ? 'BIST:DOFER' : grupSec == '5' ? 'BIST:EUPWR' : grupSec == '6' ? 'BIST:GZNMI' : grupSec == '7' ? 'BIST:ISKUR' : grupSec == '8' ? 'BIST:KRDMA' : grupSec == '9' ? 'BIST:MERCN' : grupSec == '10' ? 'BIST:OYAKC' : grupSec == '11' ? 'BIST:RAYSG' : grupSec == '12' ? 'BIST:SONME' : grupSec == '13' ? 'BIST:TURSG' : grupSec == '14' ? 'BIST:ZRGYO' : grupSec == 'ÖZEL LİSTE' ? s35 : na
a36 = grupSec == '1' ? 'BIST:ANELE' : grupSec == '2' ? 'BIST:BEGYO' : grupSec == '3' ? 'BIST:CASA' : grupSec == '4' ? 'BIST:DOGUB' : grupSec == '5' ? 'BIST:EUREN' : grupSec == '6' ? 'BIST:HALKB' : grupSec == '7' ? 'BIST:ISMEN' : grupSec == '8' ? 'BIST:KRDMB' : grupSec == '9' ? 'BIST:MERIT' : grupSec == '10' ? 'BIST:OYAYO' : grupSec == '11' ? 'BIST:REEDR' : grupSec == '12' ? 'BIST:SRVGY' : grupSec == '13' ? 'BIST:UFUK' : grupSec == '14' ? '' : grupSec == 'ÖZEL LİSTE' ? s36 : na
a37 = grupSec == '1' ? 'BIST:ANGEN' : grupSec == '2' ? 'BIST:BERA' : grupSec == '3' ? 'BIST:CATES' : grupSec == '4' ? 'BIST:DOHOL' : grupSec == '5' ? 'BIST:EUYO' : grupSec == '6' ? 'BIST:HATEK' : grupSec == '7' ? 'BIST:ISSEN' : grupSec == '8' ? 'BIST:KRDMD' : grupSec == '9' ? 'BIST:MERKO' : grupSec == '10' ? 'BIST:OYLUM' : grupSec == '11' ? 'BIST:RNPOL' : grupSec == '12' ? 'BIST:SUMAS' : grupSec == '13' ? 'BIST:ULAS' : grupSec == '14' ? '' : grupSec == 'ÖZEL LİSTE' ? s37 : na
a388 = grupSec == '1' ? 'BIST:ANHYT' : grupSec == '2' ? 'BIST:BEYAZ' : grupSec == '3' ? 'BIST:CCOLA' : grupSec == '4' ? 'BIST:DOKTA' : grupSec == '5' ? 'BIST:EYGYO' : grupSec == '6' ? 'BIST:HATSN' : grupSec == '7' ? 'BIST:IZENR' : grupSec == '8' ? 'BIST:KRGYO' : grupSec == '9' ? 'BIST:METRO' : grupSec == '10' ? 'BIST:OYYAT' : grupSec == '11' ? 'BIST:RODRG' : grupSec == '12' ? 'BIST:SUNTK' : grupSec == '13' ? 'BIST:ULKER' : grupSec == '14' ? '' : grupSec == 'ÖZEL LİSTE' ? s38 : na
a39 = grupSec == '1' ? 'BIST:ANSGR' : grupSec == '2' ? 'BIST:BFREN' : grupSec == '3' ? 'BIST:CELHA' : grupSec == '4' ? 'BIST:DURDO' : grupSec == '5' ? 'BIST:FADE' : grupSec == '6' ? 'BIST:HDFGS' : grupSec == '7' ? 'BIST:IZFAS' : grupSec == '8' ? 'BIST:KRONT' : grupSec == '9' ? 'BIST:METUR' : grupSec == '10' ? 'BIST:OZGYO' : grupSec == '11' ? 'BIST:RTALB' : grupSec == '12' ? 'BIST:SURGY' : grupSec == '13' ? 'BIST:ULUFA' : grupSec == '14' ? '' : grupSec == 'ÖZEL LİSTE' ? s39 : na
a40 = grupSec == '1' ? 'BIST:ARASE' : grupSec == '2' ? 'BIST:BIENY' : grupSec == '3' ? 'BIST:CEMAS' : grupSec == '4' ? 'BIST:DYOBY' : grupSec == '5' ? 'BIST:FENER' : grupSec == '6' ? 'BIST:HEDEF' : grupSec == '7' ? 'BIST:IZINV' : grupSec == '8' ? 'BIST:KRPLS' : grupSec == '9' ? 'BIST:MGROS' : grupSec == '10' ? 'BIST:OZKGY' : grupSec == '11' ? 'BIST:RUBNS' : grupSec == '12' ? 'BIST:SUWEN' : grupSec == '13' ? 'BIST:ULUSE' : grupSec == '14' ? '' : grupSec == 'ÖZEL LİSTE' ? s40 : na

////////////////////
[c01_1, c01_2,  c01_4, c01_5] = request.security(a01, per, func())
[c02_1, c02_2,  c02_4, c02_5] = request.security(a02, per, func())
[c03_1, c03_2,  c03_4, c03_5] = request.security(a03, per, func())
[c04_1, c04_2,  c04_4, c04_5] = request.security(a04, per, func())
[c05_1, c05_2,  c05_4, c05_5] = request.security(a05, per, func())
[c06_1, c06_2,  c06_4, c06_5] = request.security(a06, per, func())
[c07_1, c07_2,  c07_4, c07_5] = request.security(a07, per, func())
[c08_1, c08_2,  c08_4, c08_5] = request.security(a08, per, func())
[c09_1, c09_2,  c09_4, c09_5] = request.security(a09, per, func())
[c10_1, c10_2,  c10_4, c10_5] = request.security(a101, per, func())
[c11_1, c11_2,  c11_4, c11_5] = request.security(a11, per, func())
[c12_1, c12_2,  c12_4, c12_5] = request.security(a12, per, func())
[c13_1, c13_2,  c13_4, c13_5] = request.security(a13, per, func())
[c14_1, c14_2,  c14_4, c14_5] = request.security(a14, per, func())
[c15_1, c15_2,  c15_4, c15_5] = request.security(a15, per, func())
[c16_1, c16_2,  c16_4, c16_5] = request.security(a16, per, func())
[c17_1, c17_2,  c17_4, c17_5] = request.security(a17, per, func())
[c18_1, c18_2,  c18_4, c18_5] = request.security(a188, per, func())
[c19_1, c19_2,  c19_4, c19_5] = request.security(a19, per, func())
[c20_1, c20_2,  c20_4, c20_5] = request.security(a20, per, func())
[c21_1, c21_2,  c21_4, c21_5] = request.security(a21, per, func())
[c22_1, c22_2,  c22_4, c22_5] = request.security(a22, per, func())
[c23_1, c23_2,  c23_4, c23_5] = request.security(a23, per, func())
[c24_1, c24_2,  c24_4, c24_5] = request.security(a24, per, func())
[c25_1, c25_2,  c25_4, c25_5] = request.security(a25, per, func())
[c26_1, c26_2,  c26_4, c26_5] = request.security(a26, per, func())
[c27_1, c27_2,  c27_4, c27_5] = request.security(a27, per, func())
[c28_1, c28_2,  c28_4, c28_5] = request.security(a288, per, func())
[c29_1, c29_2,  c29_4, c29_5] = request.security(a29, per, func())
[c30_1, c30_2,  c30_4, c30_5] = request.security(a30, per, func())
[c31_1, c31_2,  c31_4, c31_5] = request.security(a31, per, func())
[c32_1, c32_2,  c32_4, c32_5] = request.security(a32, per, func())
[c33_1, c33_2,  c33_4, c33_5] = request.security(a33, per, func())

[c34_1, c34_2,  c34_4, c34_5] = request.security(a34, per, func())
[c35_1, c35_2,  c35_4, c35_5] = request.security(a35, per, func())
[c36_1, c36_2,  c36_4, c36_5] = request.security(a36, per, func())
[c37_1, c37_2,  c37_4, c37_5] = request.security(a37, per, func())
[c38_1, c38_2,  c38_4, c38_5] = request.security(a388, per, func())
[c39_1, c39_2,  c39_4, c39_5] = request.security(a39, per, func())
[c40_1, c40_2,  c40_4, c40_5] = request.security(a40, per, func())


// Compose screener label //

scr_label1 = '25-27\n' 




scr_label1 := c01_1 ? scr_label1 + a01 + ' '  + ' ' + '\n': scr_label1
scr_label1 := c02_1 ? scr_label1 + a02 + ' '  + ' ' + '\n' : scr_label1
scr_label1 := c03_1 ? scr_label1 + a03 + ' '  + ' ' + '\n': scr_label1
scr_label1 := c04_1 ? scr_label1 + a04 + ' '  + ' ' + '\n' : scr_label1
scr_label1 := c05_1 ? scr_label1 + a05 + ' '  + ' ' + '\n':scr_label1
scr_label1 := c06_1 ? scr_label1 + a06 + ' '  + ' ' + '\n' : scr_label1
scr_label1 := c07_1 ? scr_label1 + a07 + ' '  + ' ' + '\n' : scr_label1
scr_label1 := c08_1 ? scr_label1 + a08 + ' '  + ' ' + '\n' : scr_label1
scr_label1 := c09_1 ? scr_label1 + a09 + ' '  + ' ' + '\n': scr_label1
scr_label1 := c10_1 ? scr_label1 + a101 + ' ' + ' ' + '\n': scr_label1
scr_label1 := c11_1 ? scr_label1 + a11 + ' ' + ' ' + '\n': scr_label1
scr_label1 := c12_1 ? scr_label1 + a12 + ' ' + ' '  + '\n' : scr_label1
scr_label1 := c13_1 ? scr_label1 + a13 + ' ' + ' '  + '\n' : scr_label1
scr_label1 := c14_1 ? scr_label1 + a14 + ' ' + ' '  + '\n' : scr_label1
scr_label1 := c15_1 ? scr_label1 + a15 + ' ' + ' ' + '\n' : scr_label1
scr_label1 := c16_1 ? scr_label1 + a16 + ' ' + ' ' + '\n' : scr_label1
scr_label1 := c17_1 ? scr_label1 + a17 + ' ' + ' ' + '\n' : scr_label1
scr_label1 := c18_1 ? scr_label1 + a188 + ' ' + ' '  + '\n': scr_label1
scr_label1 := c19_1 ? scr_label1 + a19 + ' ' + ' ' + '\n' : scr_label1
scr_label1 := c20_1 ? scr_label1 + a20 + ' ' + ' ' + '\n' : scr_label1
scr_label1 := c21_1 ? scr_label1 + a21 + ' ' + ' ' + '\n' : scr_label1
scr_label1 := c22_1 ? scr_label1 + a22 + ' ' + ' ' + '\n' : scr_label1
scr_label1 := c23_1 ? scr_label1 + a23 + ' ' + ' ' + '\n' : scr_label1
scr_label1 := c24_1 ? scr_label1 + a24 + ' ' + ' ' + '\n' : scr_label1
scr_label1 := c25_1 ? scr_label1 + a25 + ' ' + ' ' + '\n' : scr_label1
scr_label1 := c26_1 ? scr_label1 + a26 + ' ' + ' ' + '\n' : scr_label1
scr_label1 := c27_1 ? scr_label1 + a27 + ' ' + ' ' + '\n' : scr_label1
scr_label1 := c28_1 ? scr_label1 + a288 + ' ' + ' ' + '\n' : scr_label1
scr_label1 := c29_1 ? scr_label1 + a29 + ' ' + ' ' + '\n' : scr_label1
scr_label1 := c30_1 ? scr_label1 + a30 + ' ' + ' ' + '\n' : scr_label1
scr_label1 := c31_1 ? scr_label1 + a31 + ' ' + ' ' + '\n' : scr_label1
scr_label1 := c32_1 ? scr_label1 + a32 + ' ' + ' ' + '\n' : scr_label1
scr_label1 := c33_1 ? scr_label1 + a33 + ' ' + ' ' + '\n' : scr_label1
scr_label1 := c34_1 ? scr_label1 + a34 + ' ' + ' ' + '\n' : scr_label1
scr_label1 := c35_1 ? scr_label1 + a35 + ' ' + ' ' + '\n' : scr_label1
scr_label1 := c36_1 ? scr_label1 + a36 + ' ' + ' ' + '\n' : scr_label1
scr_label1 := c37_1 ? scr_label1 + a37 + ' ' + ' ' + '\n' : scr_label1
scr_label1 := c38_1 ? scr_label1 + a388 + ' ' + ' ' + '\n' : scr_label1
scr_label1 := c39_1 ? scr_label1 + a39 + ' ' + ' ' + '\n' : scr_label1
scr_label1 := c40_1 ? scr_label1 + a40 + ' ' + ' ' + '\n' : scr_label1




scr_label2 = '28-30\n' 

scr_label2 := c01_2 ? scr_label2 + a01 + '  ' + '  ' + '\n' : scr_label2
scr_label2 := c02_2 ? scr_label2 + a02 + '  ' + '  ' + '\n': scr_label2
scr_label2 := c03_2 ? scr_label2 + a03 + '  ' + '  '+ '\n' : scr_label2
scr_label2 := c04_2 ? scr_label2 + a04 + '  ' + '  ' + '\n': scr_label2
scr_label2 := c05_2 ? scr_label2 + a05 + '  ' + '  ' + '\n': scr_label2
scr_label2 := c06_2 ? scr_label2 + a06 + '  ' + '  ' + '\n': scr_label2
scr_label2 := c07_2 ? scr_label2 + a07 + '  ' + '  ' + '\n': scr_label2
scr_label2 := c08_2 ? scr_label2 + a08 + '  ' + '  ' + '\n': scr_label2
scr_label2 := c09_2 ? scr_label2 + a09 + '  ' + '  ' + '\n': scr_label2
scr_label2 := c10_2 ? scr_label2 + a101+ '  ' + '  ' + '\n': scr_label2
scr_label2 := c11_2 ? scr_label2 + a11 + '  ' + '  ' + '\n': scr_label2
scr_label2 := c12_2 ? scr_label2 + a12 + '  ' + '  ' + '\n': scr_label2
scr_label2 := c13_2 ? scr_label2 + a13 + '  ' + '  ' + '\n': scr_label2
scr_label2 := c14_2 ? scr_label2 + a14 + '  ' + '  '+ '\n' : scr_label2
scr_label2 := c15_2 ? scr_label2 + a15 + '  ' + '  '+ '\n' : scr_label2
scr_label2 := c16_2 ? scr_label2 + a16 + '  ' + '  '+ '\n' : scr_label2
scr_label2 := c17_2 ? scr_label2 + a17 + '  ' + '  ' + '\n': scr_label2
scr_label2 := c18_2 ? scr_label2 + a188 + '  ' + '  ' + '\n': scr_label2
scr_label2 := c19_2 ? scr_label2 + a19 + '  ' + '  ' + '\n': scr_label2
scr_label2 := c20_2 ? scr_label2 + a20 + '  ' + '  ' + '\n': scr_label2
scr_label2 := c21_2 ? scr_label2 + a21 + '  ' + '  ' + '\n': scr_label2
scr_label2 := c22_2 ? scr_label2 + a22 + '  ' + '  ' + '\n': scr_label2
scr_label2 := c23_2 ? scr_label2 + a23 + '  ' + '  ' + '\n': scr_label2
scr_label2 := c24_2 ? scr_label2 + a24 + '  ' + '  ' + '\n': scr_label2
scr_label2 := c25_2 ? scr_label2 + s25 + '  ' + '  ' + '\n': scr_label2
scr_label2 := c26_2 ? scr_label2 + a26 + '  ' + '  ' + '\n': scr_label2
scr_label2 := c27_2 ? scr_label2 + a27 + '  ' + '  ' + '\n': scr_label2
scr_label2 := c28_2 ? scr_label2 + a288 + '  ' + '  ' + '\n': scr_label2
scr_label2 := c29_2 ? scr_label2 + a29 + '  ' + '  ' + '\n': scr_label2
scr_label2 := c30_2 ? scr_label2 + a30 + '  ' + '  ' + '\n': scr_label2
scr_label2 := c31_2 ? scr_label2 + a31 + '  ' + '  ' + '\n': scr_label2
scr_label2 := c32_2 ? scr_label2 + a32 + '  ' + '  ' + '\n': scr_label2
scr_label2 := c33_2 ? scr_label2 + a33 + '  ' + '  ' + '\n': scr_label2
scr_label2 := c34_2 ? scr_label2 + a34 + '  ' + '  ' + '\n': scr_label2
scr_label2 := c35_2 ? scr_label2 + a35 + '  ' + '  ' + '\n': scr_label2
scr_label2 := c36_2 ? scr_label2 + a36 + '  ' + '  ' + '\n': scr_label2
scr_label2 := c37_2 ? scr_label2 + s37 + '  ' + '  ' + '\n': scr_label2
scr_label2 := c38_2 ? scr_label2 + a388 + '  ' + '  ' + '\n': scr_label2
scr_label2 := c39_2 ? scr_label2 + a39 + '  ' + '  ' + '\n': scr_label2
scr_label2 := c40_2 ? scr_label2 + a40 + '  ' + '  ' + '\n': scr_label2
////////////////////

// // /////////////////////LABEL4
scr_label4 = '31-34\n'  

scr_label4 := c01_4 ? scr_label4 + a01 + '  ' + '  ' + '\n': scr_label4
scr_label4 := c02_4 ? scr_label4 + a02 + '  ' + '  ' + '\n': scr_label4
scr_label4 := c03_4 ? scr_label4 + a03 + '  ' + '  ' + '\n': scr_label4
scr_label4 := c04_4 ? scr_label4 + a04 + '  ' + '  ' + '\n': scr_label4
scr_label4 := c05_4 ? scr_label4 + a05 + '  ' + '  ' + '\n': scr_label4
scr_label4 := c06_4 ? scr_label4 + a06 + '  ' + '  ' + '\n': scr_label4
scr_label4 := c07_4 ? scr_label4 + a07 + '  ' + '  ' + '\n': scr_label4
scr_label4 := c08_4 ? scr_label4 + a08 + '  ' + '  ' + '\n': scr_label4
scr_label4 := c09_4 ? scr_label4 + a09 + '  ' + '  ' + '\n': scr_label4
scr_label4 := c10_4 ? scr_label4 + a101 + '  ' + '  ' + '\n': scr_label4
scr_label4 := c11_4 ? scr_label4 + a11 + '  ' + '  ' + '\n': scr_label4
scr_label4 := c12_4 ? scr_label4 + a12 + '  ' + '  ' + '\n': scr_label4
scr_label4 := c13_4 ? scr_label4 + a13 + '  ' + '  ' + '\n': scr_label4
scr_label4 := c14_4 ? scr_label4 + a14 + '  ' + '  ' + '\n': scr_label4
scr_label4 := c15_4 ? scr_label4 + a15 + '  ' + '  ' + '\n': scr_label4
scr_label4 := c16_4 ? scr_label4 + a16 + '  ' + '  ' + '\n': scr_label4
scr_label4 := c17_4 ? scr_label4 + a17 + '  ' + '  ' + '\n': scr_label4
scr_label4 := c18_4 ? scr_label4 + a188 + '  ' + '  ' + '\n': scr_label4
scr_label4 := c19_4 ? scr_label4 + a19 + '  ' + '  ' + '\n': scr_label4
scr_label4 := c20_4 ? scr_label4 + a20 + '  ' + '  ' + '\n': scr_label4
scr_label4 := c21_4 ? scr_label4 + a21 + '  ' + '  ' + '\n': scr_label4
scr_label4 := c22_4 ? scr_label4 + a22 + '  ' + '  ' + '\n': scr_label4
scr_label4 := c23_4 ? scr_label4 + a23 + '  ' + '  ' + '\n': scr_label4
scr_label4 := c24_4 ? scr_label4 + a24 + '  ' + '  ' + '\n': scr_label4
scr_label4 := c25_4 ? scr_label4 + s25 + '  ' + '  ' + '\n': scr_label4
scr_label4 := c26_4 ? scr_label4 + a26 + '  ' + '  ' + '\n': scr_label4
scr_label4 := c27_4 ? scr_label4 + a27 + '  ' + '  ' + '\n': scr_label4
scr_label4 := c28_4 ? scr_label4 + a288 + '  ' + '  '+ '\n': scr_label4
scr_label4 := c29_4 ? scr_label4 + a29 + '  ' + '  ' + '\n': scr_label4
scr_label4 := c30_4 ? scr_label4 + a30 + '  ' + '  ' + '\n': scr_label4
scr_label4 := c31_4 ? scr_label4 + a31 + '  ' + '  ' + '\n': scr_label4
scr_label4 := c32_4 ? scr_label4 + a32 + '  ' + '  ' + '\n': scr_label4
scr_label4 := c33_4 ? scr_label4 + a33 + '  ' + '  ' + '\n': scr_label4
scr_label4 := c34_4 ? scr_label4 + a34 + '  ' + '  ' + '\n': scr_label4
scr_label4 := c35_4 ? scr_label4 + a35 + '  ' + '  ' + '\n': scr_label4
scr_label4 := c36_4 ? scr_label4 + a36 + '  ' + '  ' + '\n': scr_label4
scr_label4 := c37_4 ? scr_label4 + s37 + '  ' + '  ' + '\n': scr_label4
scr_label4 := c38_4 ? scr_label4 + a388 + '  ' + '  ' + '\n': scr_label4
scr_label4 := c39_4 ? scr_label4 + a39 + '  ' + '  ' + '\n': scr_label4
scr_label4 := c40_4 ? scr_label4 + a40 + '  ' + '  ' + '\n': scr_label4

// // /////////////////////LABEL5
scr_label5 = '35-40\n'  

scr_label5 := c01_5 ? scr_label5 + a01 + '  ' + '  ' + '\n': scr_label5
scr_label5 := c02_5 ? scr_label5 + a02 + '  ' + '  ' + '\n': scr_label5
scr_label5 := c03_5 ? scr_label5 + a03 + '  ' + '  ' + '\n': scr_label5
scr_label5 := c04_5 ? scr_label5 + a04 + '  ' + '  ' + '\n': scr_label5
scr_label5 := c05_5 ? scr_label5 + a05 + '  ' + '  ' + '\n': scr_label5
scr_label5 := c06_5 ? scr_label5 + a06 + '  ' + '  ' + '\n': scr_label5
scr_label5 := c07_5 ? scr_label5 + a07 + '  ' + '  ' + '\n': scr_label5
scr_label5 := c08_5 ? scr_label5 + a08 + '  ' + '  ' + '\n': scr_label5
scr_label5 := c09_5 ? scr_label5 + a09 + '  ' + '  ' + '\n': scr_label5
scr_label5 := c10_5 ? scr_label5 + a101 + '  ' + '  ' + '\n': scr_label5
scr_label5 := c11_5 ? scr_label5 + a11 + '  ' + '  ' + '\n': scr_label5
scr_label5 := c12_5 ? scr_label5 + a12 + '  ' + '  ' + '\n': scr_label5
scr_label5 := c13_5 ? scr_label5 + a13 + '  ' + '  ' + '\n': scr_label5
scr_label5 := c14_5 ? scr_label5 + a14 + '  ' + '  ' + '\n': scr_label5
scr_label5 := c15_5 ? scr_label5 + a15 + '  ' + '  ' + '\n': scr_label5
scr_label5 := c16_5 ? scr_label5 + a16 + '  ' + '  ' + '\n': scr_label5
scr_label5 := c17_5 ? scr_label5 + a17 + '  ' + '  ' + '\n': scr_label5
scr_label5 := c18_5 ? scr_label5 + a188 + '  ' + '  ' + '\n': scr_label5
scr_label5 := c19_5 ? scr_label5 + a19 + '  ' + '  ' + '\n': scr_label5
scr_label5 := c20_5 ? scr_label5 + a20 + '  ' + '  ' + '\n': scr_label5
scr_label5 := c21_5 ? scr_label5 + a21 + '  ' + '  ' + '\n': scr_label5
scr_label5 := c22_5 ? scr_label5 + a22 + '  ' + '  ' + '\n': scr_label5
scr_label5 := c23_5 ? scr_label5 + a23 + '  ' + '  ' + '\n': scr_label5
scr_label5 := c24_5 ? scr_label5 + a24 + '  ' + '  ' + '\n': scr_label5
scr_label5 := c25_5 ? scr_label5 + s25 + '  ' + '  ' + '\n': scr_label5
scr_label5 := c26_5 ? scr_label5 + a26 + '  ' + '  ' + '\n': scr_label5
scr_label5 := c27_5 ? scr_label5 + a27 + '  ' + '  ' + '\n': scr_label5
scr_label5 := c28_5 ? scr_label5 + a288 + '  ' + '  '+ '\n': scr_label5
scr_label5 := c29_5 ? scr_label5 + a29 + '  ' + '  ' + '\n': scr_label5
scr_label5 := c30_5 ? scr_label5 + a30 + '  ' + '  ' + '\n': scr_label5
scr_label5 := c31_5 ? scr_label5 + a31 + '  ' + '  ' + '\n': scr_label5
scr_label5 := c32_5 ? scr_label5 + a32 + '  ' + '  ' + '\n': scr_label5
scr_label5 := c33_5 ? scr_label5 + a33 + '  ' + '  ' + '\n': scr_label5
scr_label5 := c34_5 ? scr_label5 + a34 + '  ' + '  ' + '\n': scr_label5
scr_label5 := c35_5 ? scr_label5 + a35 + '  ' + '  ' + '\n': scr_label5
scr_label5 := c36_5 ? scr_label5 + a36 + '  ' + '  ' + '\n': scr_label5
scr_label5 := c37_5 ? scr_label5 + s37 + '  ' + '  ' + '\n': scr_label5
scr_label5 := c38_5 ? scr_label5 + a388 + '  ' + '  ' + '\n': scr_label5
scr_label5 := c39_5 ? scr_label5 + a39 + '  ' + '  ' + '\n': scr_label5
scr_label5 := c40_5 ? scr_label5 + a40 + '  ' + '  ' + '\n': scr_label5

scr_label1 := scr_label1  + '\n'
scr_label2 := scr_label2  + '\n'

scr_label4 := scr_label4  + '\n'
scr_label5 := scr_label5  + '\n'

lab_1 = label.new(bar_index + loc1, close, scr_label1, color=#5dec24, textcolor=color.white, style=label.style_label_center)
lab_2 = label.new(bar_index + loc2, close, scr_label2, color=color.fuchsia, textcolor=color.white, style=label.style_label_center)

lab_4 = label.new(bar_index + loc3, close, scr_label4, color=color.orange, textcolor=color.white, style=label.style_label_center)
lab_5 = label.new(bar_index + loc4, close, scr_label5, color=color.green, textcolor=color.white, style=label.style_label_center)

// Önceki etiketi sil
label.delete(lab_1[1])
label.delete(lab_2[1])

label.delete(lab_4[1])
label.delete(lab_5[1])


// EMA hesaplamaları
ema8 = ta.ema(close, 8)
ema21 = ta.ema(close, 21)

// EMA'ları grafikte göster
plot(ema8, color=color.blue, title="8 EMA")
plot(ema21, color=color.red, title="21 EMA")
